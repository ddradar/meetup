name: Node.js CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Use Node.js 12
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 12

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Dependencies
        uses: actions/cache@v2.1.3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Project Dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

  test:
    name: Build & Test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Use Node.js 12
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 12

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Dependencies
        uses: actions/cache@v2.1.3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Project Dependencies
        run: yarn install --frozen-lockfile
      - name: Setup Firestore Emulator
        run: yarn firebase setup:emulators:firestore

      - name: Build
        run: yarn build
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      - name: Test
        run: yarn firebase emulators:exec "yarn test"
      - name: Report Code Coverage to codecov
        uses: codecov/codecov-action@v1.1.1
      - name: Upload Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: client-dist
          path: client/dist/

  staging:
    name: Deploy (Staging)
    if: github.event_name == 'push'
    needs: [test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: client-dist
          path: client/dist/
      - name: Deploy to Firebase Hosting (Staging Channel)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DDRADAR_MEETUP }}'
          projectId: ddradar-meetup
          expires: 30d
          channelId: staging
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
